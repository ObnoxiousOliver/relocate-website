---
const {className} = Astro.props
---
<div class={'carousel ' + className} id="carousel">
  <div class="carousel__images">
    <img src="pyramids-of-giza_crop.jpg">
    <img src="tajmahal_crop.jpg">
    <img src="gradina-u-srebreniku_crop.jpg">
    <img src="Thailand-scaled.jpg">
  </div>
  <div class="carousel__mask"></div>
  <div class="carousel__buttons" id="carouselButtons"></div>
</div>

<script>
  const carousel = document.getElementById('carousel')!
  const images: HTMLImageElement[] = Array.from(carousel.querySelectorAll('.carousel__images > img'))
  
  const buttonParent = document.getElementById('carouselButtons')!

  const prevBtn = document.createElement('button')
  prevBtn.addEventListener('click', prev)
  prevBtn.innerHTML = '<i class="bi-chevron-left"></i>'
  buttonParent.append(prevBtn)

  const nextBtn = document.createElement('button')
  nextBtn.addEventListener('click', next)
  nextBtn.innerHTML = '<i class="bi-chevron-right"></i>'

  images.forEach((_, i) => {
    const btn = document.createElement('button')
    btn.addEventListener('click', () => change(i))
    btn.dataset.carouselIndex = '' + i
    buttonParent.append(btn)
  })
  buttonParent.append(nextBtn)
  
  let index = 0
  
  images.forEach((img, i) => {
    img.style.display = i === index ? '' : 'none'
    buttonParent.querySelector('[data-carousel-index="' + i + '"]')!.innerHTML = (i === index) ? '<i class="bi-circle-fill"></i>' : '<i class="bi-circle"></i>'
  })

  var interval = setInterval(next, 5000)

  let changeing = 0
  function change(i: number, dir: 'right' | 'left' | 'auto' = 'auto') {
    let prev = index
    index = i

    let d = dir
    if (dir === 'auto') {
      d = prev < i ? 'right' : 'left'
    }

    images.forEach((_, i) => {
      buttonParent.querySelector('[data-carousel-index="' + i + '"]')!.innerHTML = i === index ? '<i class="bi-circle-fill"></i>' : '<i class="bi-circle"></i>'
    })

    clearInterval(interval)
    interval = setInterval(next, 5000)

    changeing++
    images[i].style.display = ''
    images[i].classList.add(d === 'right' ? 'move-right' : 'move-left')
    
    setTimeout(() => {
      images[i].classList.remove(d === 'right' ? 'move-right' : 'move-left')
      images[prev].classList.add(d === 'left' ? 'move-right' : 'move-left')

      setTimeout(() => {
        changeing--
        
        images[prev].classList.remove(d === 'left' ? 'move-right' : 'move-left')
        
        if (changeing != 0) return
        images.forEach((img, i) => {
          img.style.display = i === index ? '' : 'none'
        })
      }, 300)
    })
  }

  function next () {
    change((index === images.length - 1) ? 0 : index+1, 'right')
  }
  function prev () {
    change((index === 0) ? images.length - 1 : index-1, 'left')
  }
</script>

<style lang="scss">
.carousel {
  position: relative;

  &__mask {
    z-index: 1;
    position: absolute;
    inset: 0;
    background: 
      linear-gradient(360deg, #000000 0%, rgba(0, 0, 0, 0.88211) 3.41%, rgba(0, 0, 0, 0.760417) 5.37%, rgba(0, 0, 0, 0.5) 8.18%, rgba(0, 0, 0, 0.234375) 11.08%, rgba(0, 0, 0, 0.117187) 13.12%, rgba(0, 0, 0, 0) 16.36%),
      linear-gradient(180deg, #000000 0%, rgba(0, 0, 0, 0.88211) 7.34%, rgba(0, 0, 0, 0.760417) 12.86%, rgba(0, 0, 0, 0.5) 18.92%, rgba(0, 0, 0, 0.234375) 26.14%, rgba(0, 0, 0, 0.117187) 29.82%, rgba(0, 0, 0, 0) 35.64%),
      radial-gradient(96.63% 146.63% at 100% 81.72%, rgba(0, 0, 0, 0) 0%, rgba(0, 0, 0, 0.104567) 22.92%, rgba(0, 0, 0, 0.234375) 33.85%, rgba(0, 0, 0, 0.505208) 51.2%, rgba(0, 0, 0, 0.755208) 67.71%, rgba(0, 0, 0, 0.86613) 77.08%, #000000 100%);
    pointer-events: none;
  }

  &__buttons {
    z-index: 1;
    position: absolute;
    left: 50%;
    bottom: 50px;
    transform: translateX(-50%);
    display: flex;
    
    @media (min-width: 768px) {
      bottom: calc(75px + 1rem);
    }

    :global(button) {
      z-index: 5;
      border: none;
      background: none;
      font: inherit;
      color: inherit;
      cursor: pointer;
      padding: .5rem;
      font-size: .5rem;
    }
  }

  &__images {
    position: absolute;
    inset: 0;
    overflow: hidden;
  }

  img {
    position: absolute;
    inset: 0;
    width: 100%;
    height: 100%;
    object-fit: cover;
    opacity: 1;
    transition: .5s;

    &.move-right {
      opacity: 0;
      transform: translateX(50%);
    }
    &.move-left {
      opacity: 0;
      transform: translateX(-50%);
    }
  }
}
</style>